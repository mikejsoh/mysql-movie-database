drop database if exists MovieTheatre;
create database if not exists MovieTheatre;
use MovieTheatre;
drop table if exists Movie;
drop table if exists Customer;
drop table if exists Rooms;
drop table if exists Showing;
drop table if exists Attend;
drop table if exists Genre;

create table Movie (MovieID INT(11) NOT NULL, MovieName varchar(45), YearReleased INT(4), PRIMARY KEY(MovieID));

create table Customer (CustomerID INT(11) NOT NULL AUTO_INCREMENT, FirstName varchar(45), LastName varchar(45), Sex varchar(1), Email varchar(45) DEFAULT NULL, PRIMARY KEY(CustomerID), UNIQUE KEY Email_UNIQUE (Email));

create table Rooms (RoomNumber INT NOT NULL, Capacity INT, PRIMARY KEY(RoomNumber));

create table Showing (ShowingID INT(11) NOT NULL, ShowingDateTime datetime, MovieID INT NOT NULL, RoomNumber INT NOT NULL, TicketPrice float NOT NULL, PRIMARY KEY(ShowingID, MovieID, RoomNumber), key fk_Showing_Movie1_idx (MovieID), key fk_Showing_TheatreRoom1_idx(RoomNumber), constraint fk_Showing_Movie1 FOREIGN KEY (MovieID) REFERENCES Movie (MovieID) ON DELETE NO ACTION ON UPDATE NO ACTION, constraint fk_Showing_TheatreRoom1 FOREIGN KEY (RoomNumber) REFERENCES Rooms (RoomNumber) ON DELETE NO ACTION ON UPDATE NO ACTION);

create table Attend (CustomerID INT NOT NULL, ShowingID INT, Rating INT, PRIMARY KEY(CustomerID,ShowingID), key fk_Customer_has_Showing_Showing1_idx (ShowingID), key fk_Customer_has_Showing_Customer_idx (CustomerID), constraint fk_Customer_has_Showing_Customer foreign key (CustomerID) references Customer (CustomerID) on delete no action on update no action, constraint fk_Customer_has_Showing_Showing1 foreign key (ShowingID) references Showing (ShowingID) on delete no action on update no action);

create table Genre (Genre varchar(50) NOT NULL, MovieID INT NOT NULL, PRIMARY KEY(Genre,MovieID), constraint fk_Genre_Movie1 FOREIGN KEY (MovieID) REFERENCES Movie (MovieID) on delete no action on update no action);

show tables;


insert into Movie values (1,'Star Wars',1977),(2,'Up',2009),(3,'Pulp Fiction',1994),(4,'Aloha',2015),(5,'The Martian',2015),(6,'The Empire Strikes Back',1980),(7,'Midnight In The Garden Of Good and Evil',1997),(8,'Tommy Boy',1995),(9,'Die Hard',1988),(10,'There\'s Something About Mary',1998),(11,'Two Weeks Notice',2002),(12,'Back To The Future',1985);
select * from Movie;


insert into Customer values (1, 'Will', 'Beldman', 'M', 'wbeldma@uwo.ca');
insert into Customer values (12, 'Bill', 'Clinton', 'M', 'billy@prez.com');
insert into Customer values (13, 'Hillary', 'Clinton', 'F', 'nextprezmaybe@prez.com');
insert into Customer values (14, 'Donald', 'Trump', 'M', 'nextprezalso@prez.com');
insert into Customer values (15, 'Gary', 'Johnson', 'M', 'nextpreztoo@prez.com');
insert into Customer values (16, 'Jill', 'Stein', 'F', 'nextprezaswell@prez.com');
insert into Customer values (17, 'Barack', 'Obama','M','lastprez@prex.com'); 
select * from Customer;

insert into Rooms values (1, 30);
insert into Rooms values (2, 5);
insert into Rooms values (3, 100);
insert into Rooms values (4, 30);
insert into Rooms values (5, 6);
select * from Rooms;

insert into Showing values (7,'2016-02-11 21:30:00',1,1,5),(8,'2016-02-11 19:30:00',1,2,5),(9,'2016-02-11 19:00:00',2,3,2),(10,'2016-03-12 19:00:00',3,1,8),(11,'2016-03-12 21:00:00',4,1,8),(12,'2016-03-13 19:00:00',4,2,8),(13,'2016-03-20 19:00:00',4,1,4),(14,'2016-03-20 21:00:00',5,1,6),(15,'2016-03-22 20:30:00',8,2,4),(16,'2016-03-22 21:00:00',9,3,6),(17,'2016-03-20 19:00:00',10,2,8),(18,'2016-03-21 19:00:00',11,1,5),(19,'2016-03-23 22:00:00',11,1,3),(20,'2016-02-11 21:00:00',12,2,1);
select * from Showing;

insert into Attend values (1,7,5),(1,8,3),(1,13,1),(1,15,4),(12,8,4),(13,8,1),(14,8,2),(17,8,3),(17,19,5);
select * from Attend;

insert into Genre values ('Action',1),('SciFi',1),('Animated',2),('Action',3),('Romance',4),('Action',5),('SciFi',5),('Action',6),('SciFi',6),('Drama',7),('Comedy',8),('Action',9),('Comedy',10),('Comedy',11),('Romance',11),('Action',12),('Comedy',12),('SciFi',12);
select * from Genre;